# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

vars:
  version_file: "{{.TASKFILE_DIR}}/.task/.version"

tasks:
  setup:
    desc: Install dependencies
    dir: "{{.TASKFILE_DIR}}"
    sources:
      - .rtx.toml
      - "package.json"
      - "pnpm-*.yaml"
      - "**/package.json"
    cmds:
      - rtx install 2> /dev/null || true
      - bun install

  build:
    desc: Build all libraries
    deps: [setup]
    cmds:
      - bun x turbo build --filter "./libs/**"

  test:
    desc: Run tests on all packages
    dir: "{{.TASKFILE_DIR}}"
    deps: [build]
    cmds:
      - bun x turbo test

  lint:
    desc: Run linter on all packages
    deps: [build]
    cmds:
      - bun x turbo lint

  fix:
    desc: Apply all (unsafe) autofixes
    cmds:
      - bun x biome check --apply-unsafe .

  clean:
    desc: Clean untracked files
    cmds:
      - git clean -xdf

  docs:
    desc: Start dev server for docs
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run dev

  docs:build:
    desc: Builds the docs into the public folder
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run build
      - mv dist ../public

  webhook:
    requires:
      vars: [webhook_url, message, version, type]
    cmds:
      - 'curl -X POST -d "{\"message\": \"{{.message}}\", \"version\": \"{{.version}}\", \"type\": \"{{.type}}\"}" {{.webhook_url}}'

  version:
    desc: Bump version of package
    requires:
      vars: [type, scope]
    dir: "{{.TASKFILE_DIR}}/{{.scope}}"
    cmds:
      - echo $(npm version {{.type}} --preid=rc) > {{.version_file}}
      - git push origin HEAD:develop -o ci.skip
      - git push origin --tags -o ci.skip

  publish:
    internal: true
    deps: [build]
    vars:
      message:
        sh: "git log -1 --pretty=format:%B"
    requires:
      vars: [type, scope, tag]
    dir: "{{.TASKFILE_DIR}}/{{.scope}}"
    cmds:
      - task: version
        vars:
          type: "{{.type}}"
          scope: "{{.scope}}"
      - npm publish --tag={{.tag}}
      - task webhook webhook_url="{{.SLACK_WEBHOOK_URL}}" message="{{.message}}" type="{{.type}}" version="$(cat {{.version_file}})"

  release:
    requires:
      vars: [type, tag]
    cmds:
      - task: publish
        vars:
          type: "{{.type}}"
          tag: "{{.tag}}"
          scope: .

      - task: publish
        vars:
          type: "{{.type}}"
          tag: "{{.tag}}"
          scope: libs/elements

      - task: publish
        vars:
          type: "{{.type}}"
          tag: "{{.tag}}"
          scope: libs/scroll-lock # should be within the elements package
