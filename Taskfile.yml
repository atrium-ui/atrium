# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

tasks:
  default:
    desc: List available tasks
    silent: true
    cmds:
      - task -l --sort none

  setup:
    desc: Install dependencies
    dir: "{{.TASKFILE_DIR}}"
    sources:
      - .mise.toml
      - "package.json"
      - "pnpm-*.yaml"
      - "**/package.json"
    cmds:
      - mise install 2> /dev/null || true
      - bun install

  setup:ci:
    dir: "{{.TASKFILE_DIR}}"
    cmds:
      - mise install
      - task: setup
      - git config user.email "gitlab@s-v.de"
      - git config user.name "CI"
      - git remote set-url origin https://oauth2:$GIT_PUSH_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
      - git tag -d $(git tag -l) # delete all local tags

  build:
    desc: Build all packages
    deps: [setup]
    cmds:
      - bun x turbo build --filter "./packages/**"

  dev:
    desc: Watch-build packages for development
    deps: [setup]
    cmds:
      - bun x turbo dev --filter "./packages/**"

  test:
    desc: Run tests on all packages
    dir: "{{.TASKFILE_DIR}}"
    deps: [build]
    cmds:
      - bun x turbo test

  check:
    desc: Run checks on all packages
    deps: [build]
    cmds:
      - bun x turbo check

  fix:
    desc: Apply all (unsafe) autofixes
    cmds:
      - bun x biome check --apply-unsafe .

  clean:
    desc: Clean untracked files
    cmds:
      - git clean -xdf
      - git tag -d $(git tag -l)

  docs:
    desc: Start dev server for docs
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run dev

  docs:build:
    desc: Builds the docs into the public folder
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run build
      - mv dist ../public

  version:
    silent: true
    desc: Create a package version
    dir: "{{.TASKFILE_DIR}}"
    preconditions:
      - sh: git diff --exit-code
        msg: "Git working tree is must be clean."
    cmds:
      - bun x changeset add

  version:dev:
    desc: Enter pre-release mode
    dir: "{{.TASKFILE_DIR}}"
    cmds:
      - bun x changeset pre enter dev
      - task: version

  publish:
    deps: [build]
    vars:
      message:
        sh: "git log -1 --pretty=format:%B"
    dir: "{{.TASKFILE_DIR}}"
    cmds:
      - bun x changeset version
      - git push origin HEAD:main -o ci.skip
      - bun x changeset publish --tag > .task/publish.txt
      - defer: rm .task/publish.txt
      - git push origin HEAD:main --tags
      - task notify || true

  format:
    cmds:
      - task: fix
      - 'git diff --exit-code && git commit -m "ci: format" || true'
      - "git push origin HEAD:{{.CI_COMMIT_REF_NAME}}"

  notify:
    silent: true
    cmds:
      - bun ./scripts/generate-notify.ts > .task/notify.txt
      - defer: rm .task/notify.txt
      - 'echo "{\"message\": \"$(cat .task/notify.txt)\"}"'
      - 'curl -X POST -d "{\"message\": \"$(cat .task/notify.txt)\"}" $SLACK_WEBHOOK_URL'
