# https://taskfile.dev

version: "3"

vars:
  version_file: "{{.TASKFILE_DIR}}/.task/.version"

tasks:
  setup:
    desc: Install dependencies
    dir: "{{.TASKFILE_DIR}}"
    sources:
      - .rtx.toml
      - "package.json"
      - "pnpm-*.yaml"
      - "**/package.json"
    cmds:
      - rtx install 2> /dev/null || true
      - bun install

  build:
    desc: Build all elements
    deps: [setup]
    cmds:
      - bun x turbo build --filter "./elements/**"

  test:
    desc: Run tests on all elements
    dir: "{{.TASKFILE_DIR}}"
    deps: [build]
    cmds:
      - bun x turbo test

  lint:
    desc: Run linter on all packages
    deps: [build]
    cmds:
      - bun x turbo lint

  fix:
    cmds:
      - bun x biome format --write .
      - bun x biome lint --skip-errors --apply-unsafe .

  clean:
    desc: Clean local files
    cmds:
      - git clean -xdf

  docs:
    desc: Start dev server for docs
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run dev

  docs:build:
    desc: Builds the docs into the public folder
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run build
      - mv dist ../public

  webhook:
    desc: Trigger webhook message
    internal: true
    requires:
      vars: [webhook_url, message]
    cmds:
      - 'curl -X POST -d "{\"text\": \"{{.message}}\"}" {{.webhook_url}}'

  version:
    internal: true
    deps: [build]
    requires:
      vars: [type, scope]
    dir: "{{.TASKFILE_DIR}}/{{.scope}}"
    cmds:
      - echo $(npm version {{.type}} --preid=rc --git-tag-version=false) > {{.version_file}}
      - git add --all
      - 'git commit -m "version: $(cat {{.version_file}})"'

  publish:
    desc: Publish npm pacakge
    internal: true
    requires:
      vars: [scope, tag]
    dir: "{{.TASKFILE_DIR}}/{{.scope}}"
    vars:
      message:
        sh: echo "New {{.type}} release of *$(cat {{.version_file}})* published\n\n$(git log -1 --pretty=format:%B)"
    cmds:
      - npm publish --tag={{.tag}}
      - git push origin HEAD:develop -o ci.skip
      - task: webhook
        vars:
          webhook_url: "{{.SLACK_WEBHOOK_URL}}"
          message: "{{.message}}"

  release:
    requires:
      vars: [type, tag]
    cmds:
      - task: version
        vars:
          type: "{{.type}}"
          scope: elements
      - task: publish
        vars:
          tag: "{{.tag}}"
          scope: elements
      - task: version
        vars:
          type: "{{.type}}"
          scope: .
      - task: publish
        vars:
          tag: "{{.tag}}"
          scope: .
