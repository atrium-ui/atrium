# https://taskfile.dev

version: "3"

env:
  PACKAGE_SCOPE: .

tasks:
  run-packages:
    desc: Run a command in all packages
    internal: true
    vars:
      command: '{{.command | default "echo"}}'
      dirs:
        sh: echo $(find ./elements/packages -maxdepth 2 -type f -name "package.json" -exec dirname {} \;)
    cmds:
      - for: { var: dirs, split: " " }
        cmd: cd {{.ITEM}} && {{.command}}

  setup:
    desc: Install dependencies
    dir: "{{.TASKFILE_DIR}}"
    sources:
      - .rtx.toml
      - "package.json"
      - "pnpm-*.yaml"
      - "**/package.json"
    cmds:
      - rtx install 2> /dev/null || true
      - pnpm install

  test:
    desc: Run tests on all elements
    dir: "{{.TASKFILE_DIR}}/elements"
    deps: [build]
    cmds:
      - bun test

  lint:
    desc: Run linter on all packages
    deps: [setup]
    cmds:
      - bun x biome check .

  build:
    desc: Build all elements
    deps: [setup]
    cmds:
      - task: run-packages
        vars:
          command: bun run build

  docs:
    desc: Start dev server for docs
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run dev

  docs:build:
    desc: Builds the docs into the public folder
    dir: "{{.TASKFILE_DIR}}/docs"
    deps: [build]
    cmds:
      - bun run build
      - mv dist ../public

  new:
    desc: Create a new component from templates
    dir: "{{.TASKFILE_DIR}}"
    cmds:
      - bun x @sv/mono new

  clean:
    desc: Clean local files
    cmds:
      - git clean -xdf

  version:minor:
    desc: Version npm pacakge
    dir: "{{.TASKFILE_DIR}}/{{.PACKAGE_SCOPE}}"
    deps: [build]
    cmds:
      - npm version minor

  version:patch:
    desc: Version npm pacakge
    dir: "{{.TASKFILE_DIR}}/{{.PACKAGE_SCOPE}}"
    deps: [build]
    cmds:
      - npm version patch

  version:prerelease:
    desc: Version npm package to dev tag
    dir: "{{.TASKFILE_DIR}}"
    deps: [build]
    cmds:
      - npm version prerelease --workspace={{.PACKAGE_SCOPE}}

  publish:preview:
    desc: Pack the pacakge for preview
    dir: "{{.TASKFILE_DIR}}/{{.PACKAGE_SCOPE}}"
    cmds:
      - npm pack && tar -xvzf *.tgz && rm -rf package *.tgz

  publish:
    desc: Publish npm pacakge
    dir: "{{.TASKFILE_DIR}}/{{.PACKAGE_SCOPE}}"
    cmds:
      - npm publish
      - git push --tags -o ci.skip
      - git push origin HEAD:main -o ci.skip
      - git push origin HEAD:develop -o ci.skip

  publish:dev:
    desc: Publish npm pacakge
    dir: "{{.TASKFILE_DIR}}/{{.PACKAGE_SCOPE}}"
    cmds:
      - npm publish --tag dev
      - git push --tags -o ci.skip
      - git push origin HEAD:develop -o ci.skip
