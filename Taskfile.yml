# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

includes:
  docs:
    taskfile: docs/Taskfile.yml
    dir: docs

tasks:
  default:
    desc: List available tasks
    silent: true
    cmds:
      - task -l --sort none

  setup:
    desc: Install tools and dependencies
    run: when_changed
    sources:
      - .mise.toml
      - "package.json"
      - "**/package.json"
    cmds:
      - bun install

  build:
    desc: Build all packages
    deps: [setup]
    cmds:
      - bun x turbo build --filter "./packages/**"

  dev:
    desc: Watch-build packages for development
    deps: [setup]
    cmds:
      - bun x turbo dev --filter "./packages/**"

  test:
    desc: "Run tests on all packages (Run specific test: t test --  --test-name-pattern prettier)"
    deps: [build]
    env:
      CI_JOB_TOKEN: "glpat-tDVjH5PFYZkPiw39ffMy"
    cmds:
      - bun x turbo test -- {{.CLI_ARGS}}

  check:
    desc: Run checks on all packages
    deps: [setup]
    cmds:
      - bun x turbo check
      - bun x biome check .

  fix:
    desc: Apply all (unsafe) autofixes
    cmds:
      - bun x biome check --diagnostic-level=error --apply .

  fix:unsafe:
    desc: Apply all (unsafe) autofixes
    cmds:
      - bun x biome check --apply-unsafe .

  clean:
    desc: Clean untracked files
    cmds:
      - git clean -xdf
      - git tag -d $(git tag -l)

  version:
    silent: true
    desc: Create a package version
    cmds:
      - knope document-change

  release:
    deps: [build]
    cmds:
      - knope release | tee .task/publish.txt
      - task notify || true

  publish:
    dir: "{{.USER_WORKING_DIR}}"
    vars:
      NAME:
        sh: npm version --json | jq "keys[0]"
      VERSION:
        sh: npm version --json | jq ".[keys[0]]"
    cmds:
      - npm publish && echo info Publishing \"{{.NAME}}\" at \"{{.VERSION}}\" || true

  notify:
    silent: true
    dir: "./"
    cmds:
      - bun ./scripts/generate-notify > .task/notify.txt
      - defer: rm .task/notify.txt
      - 'echo "{\"message\": \"$(cat .task/notify.txt)\"}"'
      - 'curl -X POST -d "{\"message\": \"$(cat .task/notify.txt)\"}" $SLACK_WEBHOOK_URL'

  docker:build:
    cmds:
      - docker buildx build --platform linux/amd64,linux/arm64 ./.docker --tag luckydye/atrium:latest --push
