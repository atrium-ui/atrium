# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

includes:
  docs:
    taskfile: docs/Taskfile.yml
    dir: docs

  cli:
    taskfile: packages/components/Taskfile.yml
    dir: packages/components

tasks:
  default:
    desc: List available tasks
    silent: true
    cmds:
      - task -l --sort none

  setup:
    desc: Install tools and dependencies
    run: when_changed
    dir: "{{.TASKFILE_DIR}}"
    sources:
      - .mise.toml
      - "package.json"
      - "**/package.json"
    cmds:
      - mise install
      - bun install

  build:
    desc: Build all packages
    deps: [setup]
    cmds:
      - bun x turbo --no-daemon build --filter "./packages/**"

  dev:
    desc: Watch-build packages for development
    deps: [setup]
    cmds:
      - bun x turbo --no-daemon dev --filter "./packages/**"

  test:
    desc: Run tests on all packages
    dir: "{{.TASKFILE_DIR}}"
    deps: [cli:build, build]
    cmds:
      - bun x turbo --no-daemon test

  check:
    desc: Run checks on all packages
    deps: [setup]
    cmds:
      - bun x turbo --no-daemon check
      - bun x biome check .
      - bun x tsc --pretty

  fix:
    desc: Apply all (unsafe) autofixes
    cmds:
      - bun x biome check --apply-unsafe .

  clean:
    desc: Clean untracked files
    cmds:
      - git clean -xdf
      - git tag -d $(git tag -l)

  version:
    silent: true
    desc: Create a package version
    dir: "{{.TASKFILE_DIR}}"
    preconditions:
      - sh: git diff --exit-code
        msg: "Git working tree is must be clean."
    cmds:
      - bun x changeset add

  version:dev:
    desc: Enter pre-release mode
    dir: "{{.TASKFILE_DIR}}"
    cmds:
      - bun x changeset pre enter dev
      - task: version

  publish:
    deps: [cli:build, build]
    vars:
      message:
        sh: "git log -1 --pretty=format:%B"
    dir: "{{.TASKFILE_DIR}}"
    cmds:
      - bun x changeset version
      - git push origin HEAD:main -o ci.skip
      - bun x changeset publish --tag > .task/publish.txt
      - defer: rm .task/publish.txt
      - git push origin HEAD:main --tags
      - task notify || true

  format:
    cmds:
      - task: fix
      - 'git diff --exit-code && git commit -m "ci: format" || true'
      - "git push origin HEAD:{{.CI_COMMIT_REF_NAME}}"

  notify:
    silent: true
    cmds:
      - bun ./scripts/generate-notify.ts > .task/notify.txt
      - defer: rm .task/notify.txt
      - 'echo "{\"message\": \"$(cat .task/notify.txt)\"}"'
      - 'curl -X POST -d "{\"message\": \"$(cat .task/notify.txt)\"}" $SLACK_WEBHOOK_URL'

  docker:build:
    cmds:
      - docker buildx build --platform linux/arm64/v8,linux/amd64 --push -t luckydye/mise:latest -f ./.docker/Dockerfile .
