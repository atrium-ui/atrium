---
import { Button } from "@sv/components/templates/button.jsx";
---

<div class="w-full flex justify-center">
  <Button class="demo-button overflow-hidden">
    <a-adaptive class="overflow-visible">
      <div class="inner-demo-button">
        <span>Click me</span>
      </div>
    </a-adaptive>
  </Button>
</div>

<style is:global>
  .inner-demo-button {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 0.5rem;
    width: 100%;
    white-space: nowrap;
  }

  .loading-indicator {
    flex: none;
    display: inline-block;
    width: 1rem;
    height: 1rem;
    border-radius: 100%;
    border: 2px solid currentColor;
    border-bottom-color: transparent;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  hr {
    margin: 2rem 0;
    border-bottom: 1px solid #5c5c5c;
  }
</style>

<hr />

<a-adaptive class="overflow-hidden">
  <div class="content"></div>
</a-adaptive>

<hr />

<script>
  import { paragraph } from "txtgen";
  import "@sv/elements/adaptive";

  const indicator = document.createElement('div');
  indicator.classList.add('loading-indicator');

  let timeout: any = -1;

  const gen = () => {
    const text = paragraph(1 + Math.random() * 4);
    const content = document.querySelector('.content');
    if(content) content.innerHTML = text;
  }

  gen()

  const button = document.querySelector('.demo-button');
  if(button)
    button.addEventListener('click', () => {
      clearTimeout(timeout);
      button.querySelector(".inner-demo-button")?.appendChild(indicator);
      timeout = setTimeout(() => {

        gen()

        indicator.remove();
      }, 800);
    });
</script>
