---
const baseUrl = "https://gitlab.s-v.de/api/v4";
const token = import.meta.env.GITLAB_DEPENDENCY_ANALYSIS;

const projects = new Set();
const project = token ? await getProject() : undefined;

async function getProject() {
  const res = await fetch(
    `${baseUrl}/projects/1485/jobs/artifacts/main/raw/public/dependents.json?job=pages`,
    {
      headers: {
        "PRIVATE-TOKEN": token,
      },
    },
  );
  const tree = await res.json();
  const project = tree["1455"];

  for (const dep of project.dependents) {
    projects.add(dep.project.gitlabId);
  }

  return project;
}

async function avatar(project) {
  const id = project.gitlabId;

  console.info(`${baseUrl}/projects/${id}/avatar`);

  // needs gitlab >=v16.9
  return await fetch(`${baseUrl}/projects/${id}/avatar`, {
    headers: {
      "PRIVATE-TOKEN": token,
    },
  }).then(async res => {
    console.info(res.status);
    if (res.status !== 200) return;

    const blob = await res.blob();
    const buffer = Buffer.from(await blob.arrayBuffer());
    return `data:${blob.type};base64,${buffer.toString("base64")}`;
  });
}
---

{token ? <h3>Used by</h3> : null}
{
  token ? (
    <div class="not-content box dependents">
      {await Promise.all(
        [...projects]
          .map(id => {
            return project.dependents.find(dep => dep.project.gitlabId === id);
          })
          .map(async (dep: any) => {
            const name = dep.project.name;
            const title = dep.project.name_with_namespace;
            const avatarUri = await avatar(dep.project);

            return (
              <div class="project">
                <a class="avatar" title={title}>
                  {avatarUri ? <img src={avatarUri} /> : name[0]}
                </a>
              </div>
            );
          }),
      )}
    </div>
  ) : null
}

<style>
  .dependents {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: flex-start;
  }

  .avatar {
    --size: 60px;
    overflow: hidden;
    border-radius: 6px;
    color: black;
    font-size: calc(var(--size) * 0.65);
    font-weight: bold;
    width: var(--size);
    height: var(--size);
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    text-transform: capitalize;
    color: white;
    background: #333;
  }

  .avatar img {
    display: block;
    width: 100%;
  }
</style>
