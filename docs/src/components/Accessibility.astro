---
import path from "node:path";
import fs from "node:fs";

export interface Props {
  reportId: string;
}

const reportsDirPath = path.resolve("./.reports");
const reportId = Astro.props.reportId;

let report: any[] = [];
try {
  report = JSON.parse(fs.readFileSync(`${reportsDirPath}/${reportId}.json`).toString());
} catch (e) {
  console.warn("[Accessibility] Failed to load report for component", reportId);
}

const issues = report?.issues?.length;
const hasReport = issues !== undefined;
---

{ hasReport && (
    <div class="pill">
        {issues === 0 ?
            <label class="flex gap-2" title="This component passes all accessibility tests.">
                <svg width="18" height="18" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="32" cy="32" r="32" fill="#26522E"/>
                    <circle cx="32" cy="32" r="21.3333" fill="#6EB57F"/>
                    <path d="M18.6666 31.9996L23.2228 27.3434L29.3559 33.4694L40.7997 22.1256L45.3333 26.6663L29.3333 42.6663L18.6666 31.9996Z" fill="#1C3F23"/>
                </svg>
                <span class="align-bottom text-black dark:text-[#eee]">a11y</span>
            </label>
              : <label class="flex gap-2" title="This component has accessibility issues.">
                  <svg width="18" height="18" viewBox="0 0 14 14" fill="orange" xmlns="http://www.w3.org/2000/svg">
                      <g xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd"><path d="M0 7a7 7 0 1 1 14 0A7 7 0 0 1 0 7z"/><path d="M13 7A6 6 0 1 0 1 7a6 6 0 0 0 12 0z" fill="#703800"/><path d="M6 3.5c0-.3.2-.5.5-.5h1c.3 0 .5.2.5.5v4c0 .3-.2.5-.5.5h-1c-.3 0-.5-.2-.5-.5v-4m0 6c0-.3.2-.5.5-.5h1c.3 0 .5.2.5.5v1c0 .3-.2.5-.5.5h-1c-.3 0-.5-.2-.5-.5v-1"/></g>
                  </svg>
                  <span class="align-bottom text-black dark:text-[#eee]">a11y</span>
              </label>
        }
    </div>
)}
